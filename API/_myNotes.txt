1. To install dotnet-ef tool
    * Go to nuget.org
    * Search for "dotnet-ef" > choose the "dotnet-ef" result (first result ?!)
    * Copy the command and run it in VS Code terminal ("dotnet tool install --global dotnet-ef --version 5.0.1")
    * Notice that 5.0.1 is the version of .NET Runtime I'm using and EF Core I installed before (all have to be in sync ?!)
    * Udemy Course Ref: 2.13 Creating the Connection string

2. Create the first migration
    * In terminal: dotnet ef migrations add InitialCreate -o Data/Migrations
    * Udemy Course Ref: 2.13 Creating the Connection string

3. Update our database
    * In terminal: dotnet ef database update
    * To see the database > install SQLite extension
    * Udemy Course Ref: 2.14 Creating the database...

3.1 Credentials for Users
    * bob / Pa$$w0rd
    * dave / Pa$$w0rd
    * jane / Pa$$w0rd

3.2 To see SQLite Explorer
    * Command Palette -> type 'sql' --> choose 'SQLite: Open Database' --> choose 'datingapp.db'
    * Right click on one of the tabs (for example, Outline or Timeline tab) and toggle 'SQLite Explorer'

4. Install the Angular CLI & create Angular application
    * npm install -g @angular/cli
    * ng new client
        - you might get this error: "ng : File C:\Users\<CurrentUser>\AppData\Roaming\npm\ng.ps1 cannot be loaded..."
        - fix: Set-ExecutionPolicy RemoteSigned -Scope CurrentUser --> Get-ExecutionPolicy -list (CurrenteUser need to be set to RemoteSigned)
    * Udemy Course Ref: 3.20 Creating the Angular application

5. Installing Angular Bootstrap (ngx-bootstrap) & font-awesome
    * You need to be positioned in the /client folder
    * ng add ngx-bootstrap
    * npm install font-awesome
    * Udemy Course Ref: 3.26 Adding bootstrap and font-awesome

6. Debugging
    * First set a breakpoint where needed
    * Then go to Run section in VS Code, in the drop-down select ".NET Core Attach" (app has to be running) and click the green button
    * When asked about the process to attach to, select "API.exe" one
    * Udemy Course Ref: 4.36 Using the debugger

7. Recreate database
    * dotnet ef databse drop
    * dotnet ef database update
    * Udemy Course Ref: 4.39 Adding a login endpoint

8. Anglular generate Command
    * ng g -h
    * ng g c nav --skip-tests (position needs to be on the right folder: src\app)
    * Udemy Course Ref: 5.48 Creating a nav bar

    * ng g s account --skip-tests (position needs to be on the right folder: src\app\_services)
    * Udemy Course Ref: 5.50 Introduction to Angular services

    * ng g c home --skip-tests (position needs to be on the right folder: src\app)
    * Udemy Course Ref: 5.57 Adding a home page

    * ng g interceptor error --skip-tests
    * Udemy Course Ref: 7.78 Adding an error interceptor

9. Installing toastr
    * You need to be positioned in the /client folder
    * npm install ngx-toastr
    * Udemy Course Ref: 6.67 Adding a toast service for notifications

10. Installing Angular route guard
    * ng g guard auth --skip-tests (position needs to be on the right folder: app/_guards)
    * Udemy Course Ref: 6.68 Adding an Angular route guard

11. Installing bootswatch
    * You need to be positioned in the /client folder
    * npm install bootswatch
    * Udemy Course Ref: 6.70 Adding a new theme

12. Creating a shared module
    * ng g m shared --flat
    * Udemy Course Ref: 6.71 Tidying up the app module by using a shared module

13. EF relationships
    * Discussion on AppUser <--> Photo relationship
    * In terminal: 1. dotnet ef migrations add ExtendedUserEntity 2. dotnet ef database update
    * Udemy Course Ref: 8.86 Entity Framework relationships